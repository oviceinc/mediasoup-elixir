name: Build precompiled NIFs

on:
  push:
    branches:
      - main
      - patch_v0.7.5
    tags:
      - "*"

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.16", "2.15"]
        job:
          - {
              target: arm-unknown-linux-gnueabihf,
              os: ubuntu-20.04,
              use-cross: true,
              cross-version: "from-source",
            }
          - {
              target: aarch64-unknown-linux-gnu,
              os: ubuntu-20.04,
              use-cross: true,
              cross-version: "from-source",
            }
          - {
              target: aarch64-unknown-linux-musl,
              os: ubuntu-20.04,
              use-cross: true,
              cross-version: "from-source",
            }
            # we can't cross build for aarch64 on intel mac for now
          #- { target: aarch64-apple-darwin, os: macos-11 }
          - {
              target: riscv64gc-unknown-linux-gnu,
              os: ubuntu-20.04,
              use-cross: true,
              cross-version: "from-source",
            }
          - { target: x86_64-apple-darwin, os: macos-11 }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-20.04 }
          - {
              target: x86_64-unknown-linux-musl,
              os: ubuntu-20.04,
              use-cross: true,
              cross-version: "from-source",
            }
    # Disabled for now because of build errors on windows
    #      - { target: x86_64-pc-windows-gnu, os: windows-2022 }
    #      - { target: x86_64-pc-windows-msvc, os: windows-2022 }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Extract project version
        shell: bash
        run: |
          # Get the project version from mix.exs
          echo "PROJECT_VERSION=$(sed -n 's/^  @version "\(.*\)"/\1/p' mix.exs | head -n1)" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}

      - name: Install Build toolchain
        run: sudo apt-get install -y --no-install-recommends python3-pip wget ca-certificates
        if: contains(matrix.job.os, 'ubuntu')

      - name: Build the project
        id: build-crate
        uses: philss/rustler-precompiled-action@v1.1.1
        with:
          project-name: mediasoup_elixir
          project-version: ${{ env.PROJECT_VERSION }}
          target: ${{ matrix.job.target }}
          nif-version: ${{ matrix.nif }}
          use-cross: ${{ matrix.job.use-cross }}
          cross-version: ${{ matrix.job.cross-version }}
          project-dir: "native/mediasoup_elixir"

      - name: Artifact upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-crate.outputs.file-name }}
          path: ${{ steps.build-crate.outputs.file-path }}

      - name: Publish archives and packages
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.build-crate.outputs.file-path }}
        if: startsWith(github.ref, 'refs/tags/')

  publish:
    runs-on: ubuntu-latest
    needs: build_release
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.13.4' # Define the elixir version [required]
          otp-version: '25.3' # Define the OTP version [required]
      - name: Install dependencies
        run: |
          mix deps.get
          # workaround error for metadata about current target for the module Mediasoup.Nif is not available.
          mix compile --force  || true

      - name: download checksum files
        run: mix rustler_precompiled.download Mediasoup.Nif --all

      - name: publish to hex
        run: mix hex.publish --yes
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}